<?php
namespace Composer\Autoload; class ClassLoader { private $vendorDir; private $prefixLengthsPsr4 = array(); private $prefixDirsPsr4 = array(); private $fallbackDirsPsr4 = array(); private $prefixesPsr0 = array(); private $fallbackDirsPsr0 = array(); private $useIncludePath = false; private $classMap = array(); private $classMapAuthoritative = false; private $missingClasses = array(); private $apcuPrefix; private static $registeredLoaders = array(); public function __construct($sp87105f = null) { $this->vendorDir = $sp87105f; } public function getPrefixes() { if (!empty($this->prefixesPsr0)) { return call_user_func_array('array_merge', array_values($this->prefixesPsr0)); } return array(); } public function getPrefixesPsr4() { return $this->prefixDirsPsr4; } public function getFallbackDirs() { return $this->fallbackDirsPsr0; } public function getFallbackDirsPsr4() { return $this->fallbackDirsPsr4; } public function getClassMap() { return $this->classMap; } public function addClassMap(array $spb5b465) { if ($this->classMap) { $this->classMap = array_merge($this->classMap, $spb5b465); } else { $this->classMap = $spb5b465; } } public function add($sp8fff18, $sp788f3d, $sp688a95 = false) { if (!$sp8fff18) { if ($sp688a95) { $this->fallbackDirsPsr0 = array_merge((array) $sp788f3d, $this->fallbackDirsPsr0); } else { $this->fallbackDirsPsr0 = array_merge($this->fallbackDirsPsr0, (array) $sp788f3d); } return; } $spff38ae = $sp8fff18[0]; if (!isset($this->prefixesPsr0[$spff38ae][$sp8fff18])) { $this->prefixesPsr0[$spff38ae][$sp8fff18] = (array) $sp788f3d; return; } if ($sp688a95) { $this->prefixesPsr0[$spff38ae][$sp8fff18] = array_merge((array) $sp788f3d, $this->prefixesPsr0[$spff38ae][$sp8fff18]); } else { $this->prefixesPsr0[$spff38ae][$sp8fff18] = array_merge($this->prefixesPsr0[$spff38ae][$sp8fff18], (array) $sp788f3d); } } public function addPsr4($sp8fff18, $sp788f3d, $sp688a95 = false) { if (!$sp8fff18) { if ($sp688a95) { $this->fallbackDirsPsr4 = array_merge((array) $sp788f3d, $this->fallbackDirsPsr4); } else { $this->fallbackDirsPsr4 = array_merge($this->fallbackDirsPsr4, (array) $sp788f3d); } } elseif (!isset($this->prefixDirsPsr4[$sp8fff18])) { $sp50b1ae = strlen($sp8fff18); if ('\\' !== $sp8fff18[$sp50b1ae - 1]) { throw new \InvalidArgumentException('A non-empty PSR-4 prefix must end with a namespace separator.'); } $this->prefixLengthsPsr4[$sp8fff18[0]][$sp8fff18] = $sp50b1ae; $this->prefixDirsPsr4[$sp8fff18] = (array) $sp788f3d; } elseif ($sp688a95) { $this->prefixDirsPsr4[$sp8fff18] = array_merge((array) $sp788f3d, $this->prefixDirsPsr4[$sp8fff18]); } else { $this->prefixDirsPsr4[$sp8fff18] = array_merge($this->prefixDirsPsr4[$sp8fff18], (array) $sp788f3d); } } public function set($sp8fff18, $sp788f3d) { if (!$sp8fff18) { $this->fallbackDirsPsr0 = (array) $sp788f3d; } else { $this->prefixesPsr0[$sp8fff18[0]][$sp8fff18] = (array) $sp788f3d; } } public function setPsr4($sp8fff18, $sp788f3d) { if (!$sp8fff18) { $this->fallbackDirsPsr4 = (array) $sp788f3d; } else { $sp50b1ae = strlen($sp8fff18); if ('\\' !== $sp8fff18[$sp50b1ae - 1]) { throw new \InvalidArgumentException('A non-empty PSR-4 prefix must end with a namespace separator.'); } $this->prefixLengthsPsr4[$sp8fff18[0]][$sp8fff18] = $sp50b1ae; $this->prefixDirsPsr4[$sp8fff18] = (array) $sp788f3d; } } public function setUseIncludePath($spb8877d) { $this->useIncludePath = $spb8877d; } public function getUseIncludePath() { return $this->useIncludePath; } public function setClassMapAuthoritative($spdf8552) { $this->classMapAuthoritative = $spdf8552; } public function isClassMapAuthoritative() { return $this->classMapAuthoritative; } public function setApcuPrefix($spbeac8d) { $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $spbeac8d : null; } public function getApcuPrefix() { return $this->apcuPrefix; } public function register($sp688a95 = false) { spl_autoload_register(array($this, 'loadClass'), true, $sp688a95); if (null === $this->vendorDir) { return; } if ($sp688a95) { self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders; } else { unset(self::$registeredLoaders[$this->vendorDir]); self::$registeredLoaders[$this->vendorDir] = $this; } } public function unregister() { spl_autoload_unregister(array($this, 'loadClass')); if (null !== $this->vendorDir) { unset(self::$registeredLoaders[$this->vendorDir]); } } public function loadClass($spe0be63) { if ($sp7982be = $this->findFile($spe0be63)) { includeFile($sp7982be); return true; } return null; } public function findFile($spe0be63) { if (isset($this->classMap[$spe0be63])) { return $this->classMap[$spe0be63]; } if ($this->classMapAuthoritative || isset($this->missingClasses[$spe0be63])) { return false; } if (null !== $this->apcuPrefix) { $sp7982be = apcu_fetch($this->apcuPrefix . $spe0be63, $sp8da10c); if ($sp8da10c) { return $sp7982be; } } $sp7982be = $this->sp092cee($spe0be63, '.php'); if (false === $sp7982be && defined('HHVM_VERSION')) { $sp7982be = $this->sp092cee($spe0be63, '.hh'); } if (null !== $this->apcuPrefix) { apcu_add($this->apcuPrefix . $spe0be63, $sp7982be); } if (false === $sp7982be) { $this->missingClasses[$spe0be63] = true; } return $sp7982be; } public static function getRegisteredLoaders() { return self::$registeredLoaders; } private function sp092cee($spe0be63, $sp4f7112) { $spa75bb7 = strtr($spe0be63, '\\', DIRECTORY_SEPARATOR) . $sp4f7112; $spff38ae = $spe0be63[0]; if (isset($this->prefixLengthsPsr4[$spff38ae])) { $sp0c3105 = $spe0be63; while (false !== ($sp9450a7 = strrpos($sp0c3105, '\\'))) { $sp0c3105 = substr($sp0c3105, 0, $sp9450a7); $spd27c67 = $sp0c3105 . '\\'; if (isset($this->prefixDirsPsr4[$spd27c67])) { $spcaf77f = DIRECTORY_SEPARATOR . substr($spa75bb7, $sp9450a7 + 1); foreach ($this->prefixDirsPsr4[$spd27c67] as $spb0db32) { if (file_exists($sp7982be = $spb0db32 . $spcaf77f)) { return $sp7982be; } } } } } foreach ($this->fallbackDirsPsr4 as $spb0db32) { if (file_exists($sp7982be = $spb0db32 . DIRECTORY_SEPARATOR . $spa75bb7)) { return $sp7982be; } } if (false !== ($sp9f25a2 = strrpos($spe0be63, '\\'))) { $sp7b9818 = substr($spa75bb7, 0, $sp9f25a2 + 1) . strtr(substr($spa75bb7, $sp9f25a2 + 1), '_', DIRECTORY_SEPARATOR); } else { $sp7b9818 = strtr($spe0be63, '_', DIRECTORY_SEPARATOR) . $sp4f7112; } if (isset($this->prefixesPsr0[$spff38ae])) { foreach ($this->prefixesPsr0[$spff38ae] as $sp8fff18 => $sp18f89f) { if (0 === strpos($spe0be63, $sp8fff18)) { foreach ($sp18f89f as $spb0db32) { if (file_exists($sp7982be = $spb0db32 . DIRECTORY_SEPARATOR . $sp7b9818)) { return $sp7982be; } } } } } foreach ($this->fallbackDirsPsr0 as $spb0db32) { if (file_exists($sp7982be = $spb0db32 . DIRECTORY_SEPARATOR . $sp7b9818)) { return $sp7982be; } } if ($this->useIncludePath && ($sp7982be = stream_resolve_include_path($sp7b9818))) { return $sp7982be; } return false; } } function includeFile($sp7982be) { include $sp7982be; }